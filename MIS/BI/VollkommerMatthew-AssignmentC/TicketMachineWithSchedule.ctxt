#BlueJ class context
comment0.params=ticketCost
comment0.target=TicketMachineWithSchedule(int)
comment0.text=\r\n\ Create\ a\ machine\ that\ issues\ tickets\ of\ the\ given\ price.\r\n\ Do\ not\ update\ this\ constructor's\ parameters.\r\n
comment1.params=pTrain1Time\ pTrain1Guide\ pTrain2Time\ pTrain2Guide
comment1.target=void\ enterSchedule(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ \ \ \ 2.\ Leaving\ the\ constructor\ the\ same,\ add\ a\ new\ method\ with\ the\ following\ header\:\r\n\ A\ stub\ for\ this\ method\ is\ already\ added\ at\ the\ end\ of\ the\ TicketMachingWithSchedule\ class.\ \r\n\ This\ method\ should\ take\ the\ four\ parameter\ values\ and\ put\ them\ in\ the\ appropriate\ attributes.\ Add\ system\ comments\ \r\n\ to\ each\ new\ method\ you\ write.\r\n
comment2.params=pDesiredTime
comment2.target=void\ printTicket(int)
comment2.text=\r\n\ \ \ \ 3.\ Add\ a\ new\ printTicket\ method\ that\ it\ requires\ a\ parameter\ value\ indicating\ the\ desired\ train,\ \r\n\ \ \ \ and\ prints\ the\ additional\ information.\ (You\ can\ keep\ the\ original\ printTicket\ method\ in\ the\ code.\ \r\n\ \ \ \ Java\ allows\ this.)\ A\ stub\ for\ this\ method\ is\ already\ added\ at\ the\ end\ of\ the\ TicketMachingWithSchedule\ class.\r\n\ \ \ \ For\ Example,\ printTicket(1)\ might\ produce\:\ \r\n\ \ \ \ \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\ \ \ \ \#\ The\ BlueJ\ Line\ --\ Stone\ Mountain\ Tour\ \r\n\ \ \ \ \#\ Departure\:\ 9\:00\ AM\ Guide\:\ Smith.\r\n\ \ \ \ \#\ Ticket\r\n\ \ \ \ \#\ 550\ cents.\r\n\ \ \ \ \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\ \ \ \ You\ can\ leave\ the\ old\ printTicket()\ method\ in,\ or\ delete\ it,\ either\ one.\r\n
comment3.params=
comment3.target=void\ printFullSchedule()
comment3.text=\r\n\ \ \ \ 4.\ Add\ a\ PrintFullSchedule\ method\ with\ no\ parameters\ that\ will\ print\ out\ the\ total\ schedule.\ A\r\n\ \ \ \ stub\ for\ this\ method\ is\ already\ added\ at\ the\ end\ of\ the\ TicketMachingWithSchedule\ class.\ For\ example,\ \r\n\ \ \ \ PrintFullSchedule()\ should\ produce\ something\ such\ as\:\r\n\ \ \ \ Stone\ Mountain\ Railroad\ Full\ Schedule\:\r\n\ \ \ \ Train\ \#\ \ \ \ Departure\ Time\ \ Guide\r\n\ \ \ \ 1\ \ \ \ \ \ \ \ \ \ 9\:00\ AM\ \ \ \ \ \ \ \ \ Smith\r\n\ \ \ \ 2\ \ \ \ \ \ \ \ \ \ 10\:30\ AM\ \ \ \ \ \ \ \ Jones\r\n
comment4.params=
comment4.target=int\ getPrice()
comment4.text=\r\n\ @Return\ The\ price\ of\ a\ ticket.\r\n
comment5.params=
comment5.target=int\ getBalance()
comment5.text=\r\n\ Return\ The\ amount\ of\ money\ already\ inserted\ for\ the\r\n\ next\ ticket.\r\n
comment6.params=amount
comment6.target=void\ insertMoney(int)
comment6.text=\r\n\ Receive\ an\ amount\ of\ money\ in\ cents\ from\ a\ customer.\r\n\ Check\ that\ the\ amount\ is\ sensible.\r\n
comment7.params=
comment7.target=void\ printTicket()
comment7.text=\r\n\ Print\ a\ ticket\ if\ enough\ money\ has\ been\ inserted,\ and\r\n\ reduce\ the\ current\ balance\ by\ the\ ticket\ price.\ Print\r\n\ an\ error\ message\ if\ more\ money\ is\ required.\r\n
comment8.params=
comment8.target=int\ refundBalance()
comment8.text=\r\n\ Return\ the\ money\ in\ the\ balance.\r\n\ The\ balance\ is\ cleared.\r\n
numComments=9
